// <auto-generated />
using System;
using FlightFinderApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FlightFinderApi.Migrations
{
    [DbContext(typeof(FlightFinderDbContext))]
    [Migration("20230307150000_2nd Migration")]
    partial class _2ndMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FlightFinderApi.Models.Itinerary", b =>
                {
                    b.Property<string>("Flight_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("ArrivalAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("AvailableSeats")
                        .HasColumnType("int");

                    b.Property<DateTime>("DepartureAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("PricesId")
                        .HasColumnType("int");

                    b.Property<string>("RootRoute_Id")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Flight_Id");

                    b.HasIndex("PricesId");

                    b.HasIndex("RootRoute_Id");

                    b.ToTable("Itineraries");
                });

            modelBuilder.Entity("FlightFinderApi.Models.Price", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Adult")
                        .HasColumnType("float");

                    b.Property<double>("Child")
                        .HasColumnType("float");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Prices");
                });

            modelBuilder.Entity("FlightFinderApi.Models.Root", b =>
                {
                    b.Property<string>("Route_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ArrivalDestination")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartureDestination")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Route_Id");

                    b.ToTable("Roots");
                });

            modelBuilder.Entity("FlightFinderApi.Models.Itinerary", b =>
                {
                    b.HasOne("FlightFinderApi.Models.Price", "Prices")
                        .WithMany()
                        .HasForeignKey("PricesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlightFinderApi.Models.Root", null)
                        .WithMany("Itineraries")
                        .HasForeignKey("RootRoute_Id");

                    b.Navigation("Prices");
                });

            modelBuilder.Entity("FlightFinderApi.Models.Root", b =>
                {
                    b.Navigation("Itineraries");
                });
#pragma warning restore 612, 618
        }
    }
}
